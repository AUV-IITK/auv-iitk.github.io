{"ast":null,"code":"var _jsxFileName = \"/home/shivam/new_workflow/auv-iitk.github.io/src/views/SingleBlogs/SingleBlog.js\";\nimport React, { Component } from \"react\";\nimport \"./SingleBlog.css\"; // reactstrap components\n\nimport { Container, Row, Col, Spinner } from \"reactstrap\";\nimport data from \"../../data/Blogs.json\";\nimport ExamplesNavbar from \"../../components/Navbars/ExamplesNavbar\";\n\nclass BlogsPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pathid: \"\",\n      blogid: \"\",\n      loading: false\n    };\n\n    this.getLastItem = thePath => thePath.substring(thePath.lastIndexof(\"/\") + 1);\n  }\n\n  componentDidMount() {\n    document.documentElement.classList.remove(\"nav-open\");\n    window.scrollTo(0, 0);\n    this.setState({\n      loading: true\n    });\n\n    if (data) {\n      this.setState({\n        loading: false\n      });\n    }\n\n    this.setState({\n      pathid: this.props.location.pathname\n    });\n  }\n\n  render() {\n    let blogid = this.state.pathid.substring(this.state.pathid.lastIndexOf(\"/\") + 1);\n    console.log(blogid);\n    console.log(data.blogsData);\n    const disp = data.blogsData.map(recievedBlog => {\n      if (blogid === recievedBlog.blogId) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"single-blog\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          className: \"blog-heading-single-page\",\n          style: {\n            fontSize: \"3.4rem\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }\n        }, recievedBlog.heading), /*#__PURE__*/React.createElement(\"h2\", {\n          className: \"single-blog-author\",\n          style: {\n            fontSize: \"1.8rem\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }\n        }, recievedBlog.author), /*#__PURE__*/React.createElement(\"h2\", {\n          className: \"single-blog-date\",\n          style: {\n            fontSize: \"1.8rem\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }\n        }, \" \", recievedBlog.date, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }\n        }, recievedBlog.body.map(contentobject => {\n          if (contentobject.type == \"para\") {\n            return /*#__PURE__*/React.createElement(\"p\", {\n              className: \"blogs-description text-left mb-5\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 26\n              }\n            }, contentobject.content);\n          } else if (contentobject.type == \"image\") {\n            return /*#__PURE__*/React.createElement(\"img\", {\n              className: \"single-blog-image\",\n              src: require(\"assets/img/blog/BlogImages/\" + contentobject.src),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 21\n              }\n            });\n          } else if (contentobject.type == \"h2\") {\n            return /*#__PURE__*/React.createElement(\"h2\", {\n              className: \"blog-secondary-heading text-left\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 26\n              }\n            }, contentobject.content);\n          } else if (contentobject.type == \"list-block\") {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"blog-list-block\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"h3\", {\n              className: \"blog-list-heading\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 23\n              }\n            }, contentobject.listHeading), contentobject.listItems.map(listItem => {\n              return /*#__PURE__*/React.createElement(\"li\", {\n                className: \"blog-list-item\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 32\n                }\n              }, listItem);\n            }));\n          } else {\n            return;\n          }\n        })));\n      } else {\n        return;\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mobile-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExamplesNavbar, {\n      activePage: \"/blogs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), disp);\n  }\n\n}\n\nexport default BlogsPage;","map":{"version":3,"sources":["/home/shivam/new_workflow/auv-iitk.github.io/src/views/SingleBlogs/SingleBlog.js"],"names":["React","Component","Container","Row","Col","Spinner","data","ExamplesNavbar","BlogsPage","state","pathid","blogid","loading","getLastItem","thePath","substring","lastIndexof","componentDidMount","document","documentElement","classList","remove","window","scrollTo","setState","props","location","pathname","render","lastIndexOf","console","log","blogsData","disp","map","recievedBlog","blogId","fontSize","heading","author","date","body","contentobject","type","content","require","src","listHeading","listItems","listItem"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./SingleBlog.css\"\n// reactstrap components\nimport { Container, Row, Col, Spinner } from \"reactstrap\";\nimport data from \"../../data/Blogs.json\";\nimport ExamplesNavbar from \"../../components/Navbars/ExamplesNavbar\";\nclass BlogsPage extends Component {\n  state = {\n    pathid: \"\",\n    blogid: \"\",\n    loading: false,\n  };\n\n  getLastItem = (thePath) => thePath.substring(thePath.lastIndexof(\"/\") + 1);\n\n  componentDidMount() {\n    document.documentElement.classList.remove(\"nav-open\");\n    window.scrollTo(0, 0);\n    this.setState({ loading: true });\n    if (data) {\n      this.setState({ loading: false });\n    }\n    this.setState({ pathid: this.props.location.pathname });\n  }\n  render() {\n    let blogid = this.state.pathid.substring(\n      this.state.pathid.lastIndexOf(\"/\") + 1\n    );\n    console.log(blogid);\n    console.log(data.blogsData);\n    const disp = data.blogsData.map((recievedBlog) => {\n      if (blogid === recievedBlog.blogId) {\n        return (\n          <div className=\"single-blog\">\n            <h1 className=\"blog-heading-single-page\" style={{ fontSize: \"3.4rem\" }}>{recievedBlog.heading}</h1>\n            <h2 className=\"single-blog-author\" style={{ fontSize: \"1.8rem\" }}>{recievedBlog.author}</h2>\n            <h2 className=\"single-blog-date\" style={{ fontSize: \"1.8rem\" }}> {recievedBlog.date} </h2>\n            <div>\n              {recievedBlog.body.map((contentobject) => {\n                if (contentobject.type == \"para\") {\n                  return <p className=\"blogs-description text-left mb-5\">{contentobject.content}</p>;\n                } else if (contentobject.type == \"image\") {\n                  return (\n                    <img\n                      className=\"single-blog-image\"\n                      src={require(\"assets/img/blog/BlogImages/\" +\n                        contentobject.src)}\n                    ></img>\n                  );\n                } else if (contentobject.type == \"h2\") {\n                  return <h2 className=\"blog-secondary-heading text-left\">{contentobject.content}</h2>;\n                } else if (contentobject.type == \"list-block\") {\n                  return (\n                    <div className=\"blog-list-block\">\n                      <h3 className=\"blog-list-heading\">{contentobject.listHeading}</h3>\n                      {contentobject.listItems.map((listItem) => {\n                        return <li className=\"blog-list-item\">{listItem}</li>;\n                      })}\n                    </div>\n                  );\n                } else {\n                  return;\n                }\n              })}\n            </div>\n          </div>\n        );\n      } else {\n        return;\n      }\n    });\n    return (\n      <div className=\"mobile-responsive\">\n        <ExamplesNavbar activePage=\"/blogs\" />\n        {disp}\n      </div>\n    );\n  }\n}\n\nexport default BlogsPage;\n"]},"metadata":{},"sourceType":"module"}